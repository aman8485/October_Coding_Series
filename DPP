1- Container With Most Water

class Solution {
    public int maxArea(int[] arr) {
int i=0;
int j=arr.length-1;
int res=0;
while(i<j){
    int m=Math.min(arr[i],arr[j]);
    res=Math.max(res,m*(j-i));
    if(arr[i]<arr[j]){
        i++;
    }else{
        j--;
    }
}
return res;
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
2-Adjacent Increasing Subarrays Detection I

class Solution {
    public boolean hasIncreasingSubarrays(List<Integer> arr, int k) {
        int cl=1;
        int pl=0;
        int ans=0;
        for(int i=1;i<arr.size();i++){
            if(arr.get(i)>arr.get(i-1)){
                cl++;
            }else{
                pl=cl;
                cl=1;
            }
            ans=Math.max(ans,Math.max(cl/2,Math.min(cl,pl)));
        }
        return ans>=k;
    }
}
